#BlueJ class context
comment0.target=ChartCreator
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Charts\ here.\r\n\ \r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=ChartCreator\ getChartCreator()
comment10.params=maxValue\ absoluteValues\ colors\ legend\ width\ height
comment10.target=greenfoot.GreenfootImage\ createBarChart(double,\ double[],\ greenfoot.Color[],\ java.lang.String[],\ int,\ int)
comment10.text=\r\n\ Creates\ a\ bar\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ colors,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ bar\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ bar\ of\ the\ bar\ chart\ as\ absolute\ values.\r\n\ \r\n\ @param\ colors\r\n\ \ \ \ \ \ The\ colors\ for\ each\ bar\ of\ the\ bar\ chart.\r\n\ \r\n\ @param\ legend\r\n\ \ \ \ \ \ The\ names\ of\ each\ bar\ for\ the\ chart.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ bar\ chart\ calculated\ by\ the\ given\ values.\r\n
comment11.params=maxValue\ absoluteValues\ colors\ legend\ width\ height\ textColor
comment11.target=greenfoot.GreenfootImage\ createBarChart(double,\ double[],\ greenfoot.Color[],\ java.lang.String[],\ int,\ int,\ greenfoot.Color)
comment11.text=\r\n\ Creates\ a\ bar\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ colors,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ bar\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ bar\ of\ the\ bar\ chart\ as\ absolute\ values.\r\n\ \r\n\ @param\ colors\r\n\ \ \ \ \ \ The\ colors\ for\ each\ bar\ of\ the\ bar\ chart.\r\n\ \r\n\ @param\ legend\r\n\ \ \ \ \ \ The\ names\ of\ each\ bar\ for\ the\ chart.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ textColor\r\n\ \ \ \ \ \ The\ text\ color\ of\ the\ legend.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ bar\ chart\ calculated\ by\ the\ given\ values.\r\n
comment12.params=maxValue\ absoluteValues\ colors\ legend\ displayValues\ width\ height
comment12.target=greenfoot.GreenfootImage\ createBarChart(double,\ double[],\ greenfoot.Color[],\ java.lang.String[],\ boolean,\ int,\ int)
comment12.text=\r\n\ Creates\ a\ bar\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ colors,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ bar\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ bar\ of\ the\ bar\ chart\ as\ absolute\ values.\r\n\ \r\n\ @param\ colors\r\n\ \ \ \ \ \ The\ colors\ for\ each\ bar\ of\ the\ bar\ chart.\r\n\ \r\n\ @param\ legend\r\n\ \ \ \ \ \ The\ names\ of\ each\ bar\ for\ the\ chart.\r\n\ \r\n\ @param\ displayValues\r\n\ \ \ \ \ \ You\ can\ choose\ whether\ the\ values\ should\ be\ displayed\ or\ not.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ bar\ chart\ calculated\ by\ the\ given\ values.\r\n
comment13.params=maxValue\ absoluteValues\ colors\ legend\ displayValues\ width\ height\ backgroundColor
comment13.target=greenfoot.GreenfootImage\ createBarChart(double,\ double[],\ greenfoot.Color[],\ java.lang.String[],\ boolean,\ int,\ int,\ greenfoot.Color)
comment13.text=\r\n\ Creates\ a\ bar\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ colors,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ bar\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ bar\ of\ the\ bar\ chart\ as\ absolute\ values.\r\n\ \r\n\ @param\ colors\r\n\ \ \ \ \ \ The\ colors\ for\ each\ bar\ of\ the\ bar\ chart.\r\n\ \r\n\ @param\ legend\r\n\ \ \ \ \ \ The\ names\ of\ each\ bar\ for\ the\ chart.\r\n\ \r\n\ @param\ displayValues\r\n\ \ \ \ \ \ You\ can\ choose\ whether\ the\ values\ should\ be\ displayed\ or\ not.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ bar\ chart\ calculated\ by\ the\ given\ values.\r\n
comment14.params=maxValue\ absoluteValues\ colors\ legend\ displayValues\ width\ height\ backgroundColor\ textColor
comment14.target=greenfoot.GreenfootImage\ createBarChart(double,\ double[],\ greenfoot.Color[],\ java.lang.String[],\ boolean,\ int,\ int,\ greenfoot.Color,\ greenfoot.Color)
comment14.text=\r\n\ Creates\ a\ bar\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ colors,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ bar\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ bar\ of\ the\ bar\ chart\ as\ absolute\ values.\r\n\ \r\n\ @param\ colors\r\n\ \ \ \ \ \ The\ colors\ for\ each\ bar\ of\ the\ bar\ chart.\r\n\ \r\n\ @param\ legend\r\n\ \ \ \ \ \ The\ names\ of\ each\ bar\ for\ the\ chart.\r\n\ \r\n\ @param\ displayValues\r\n\ \ \ \ \ \ You\ can\ choose\ whether\ the\ values\ should\ be\ displayed\ or\ not.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @param\ textColor\r\n\ \ \ \ \ \ The\ text\ color\ of\ the\ legend.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ bar\ chart\ calculated\ by\ the\ given\ values.\r\n
comment15.params=maxValue\ absoluteValues\ colors\ legend\ displayValues\ width\ height\ backgroundColor\ textColor\ frameColor\ frameWidth
comment15.target=greenfoot.GreenfootImage\ createBarChart(double,\ double[],\ greenfoot.Color[],\ java.lang.String[],\ boolean,\ int,\ int,\ greenfoot.Color,\ greenfoot.Color,\ greenfoot.Color,\ int)
comment15.text=\r\n\ Creates\ a\ bar\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ colors,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ bar\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ bar\ of\ the\ bar\ chart\ as\ absolute\ values.\r\n\ \r\n\ @param\ colors\r\n\ \ \ \ \ \ The\ colors\ for\ each\ bar\ of\ the\ bar\ chart.\r\n\ \r\n\ @param\ legend\r\n\ \ \ \ \ \ The\ names\ of\ each\ bar\ for\ the\ chart.\r\n\ \r\n\ @param\ displayValues\r\n\ \ \ \ \ \ You\ can\ choose\ whether\ the\ values\ should\ be\ displayed\ or\ not.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @param\ textColor\r\n\ \ \ \ \ \ The\ text\ color\ of\ the\ legend.\r\n\ \r\n\ @param\ frameColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ frame\ (if\ there\ is\ one).\r\n\ \r\n\ @param\ frameWidth\r\n\ \ \ \ \ \ The\ width\ of\ the\ frame\ (0\ \=\ no\ frame).\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ bar\ chart\ calculated\ by\ the\ given\ values.\r\n
comment16.params=maxValue\ absoluteValues\ width\ height
comment16.target=greenfoot.GreenfootImage\ createLineChart(double,\ java.awt.Point[],\ int,\ int)
comment16.text=\r\n\ Creates\ a\ line\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ colors,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ line\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ point\ of\ the\ line\ chart\ as\ absolute\ values.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ line\ chart\ calculated\ by\ the\ given\ values.\r\n
comment17.params=maxValue\ absoluteValues\ width\ height\ lineColor
comment17.target=greenfoot.GreenfootImage\ createLineChart(double,\ java.awt.Point[],\ int,\ int,\ greenfoot.Color)
comment17.text=\r\n\ Creates\ a\ line\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ colors,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ line\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ point\ of\ the\ line\ chart\ as\ absolute\ values.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ lineColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ line.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ line\ chart\ calculated\ by\ the\ given\ values.\r\n
comment18.params=maxValue\ absoluteValues\ width\ height\ backgroundColor\ lineColor
comment18.target=greenfoot.GreenfootImage\ createLineChart(double,\ java.awt.Point[],\ int,\ int,\ greenfoot.Color,\ greenfoot.Color)
comment18.text=\r\n\ Creates\ a\ line\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ line\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ point\ of\ the\ line\ chart\ as\ absolute\ values.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @param\ lineColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ line.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ line\ chart\ calculated\ by\ the\ given\ values.\r\n
comment19.params=maxValue\ absoluteValues\ width\ height\ backgroundColor\ lineColor\ frameColor\ frameWidth
comment19.target=greenfoot.GreenfootImage\ createLineChart(double,\ java.awt.Point[],\ int,\ int,\ greenfoot.Color,\ greenfoot.Color,\ greenfoot.Color,\ int)
comment19.text=\r\n\ Creates\ a\ line\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ line\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ point\ of\ the\ line\ chart\ as\ absolute\ values.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @param\ lineColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ line.\r\n\ \r\n\ @param\ frameColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ frame\ (if\ there\ is\ one).\r\n\ \r\n\ @param\ frameWidth\r\n\ \ \ \ \ \ The\ width\ of\ the\ frame\ (0\ \=\ no\ frame).\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ line\ chart\ calculated\ by\ the\ given\ values.\r\n
comment2.params=radius\ percentValues\ colors
comment2.target=greenfoot.GreenfootImage\ createPieChart(int,\ double[],\ greenfoot.Color[])
comment2.text=\r\n\ Create\ a\ pie\ chart\ with\ the\ given\ values\ for\ the\ radius,\ the\ percentValues,\ the\ colors...\r\n\ \r\n\ @param\ radius\r\n\ \ \ \ \ \ The\ radius\ of\ the\ pie\ chart\ that\ is\ created.\r\n\ \r\n\ @param\ percentValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ part\ of\ the\ pie\ chart\ as\ percent\ values.\r\n\ \r\n\ @param\ colors\r\n\ \ \ \ \ \ The\ colors\ for\ each\ part\ of\ the\ pie\ chart.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ pie\ chart\ calculated\ by\ the\ given\ values.\r\n
comment20.params=maxValue\ absoluteValues\ width\ height
comment20.target=greenfoot.GreenfootImage\ createPointChart(double,\ java.awt.Point[],\ int,\ int)
comment20.text=\r\n\ Creates\ a\ point\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ point\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ point\ as\ absolute\ values.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ point\ chart\ calculated\ by\ the\ given\ values.\r\n
comment21.params=maxValue\ absoluteValues\ width\ height\ pointColor
comment21.target=greenfoot.GreenfootImage\ createPointChart(double,\ java.awt.Point[],\ int,\ int,\ greenfoot.Color)
comment21.text=\r\n\ Creates\ a\ point\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ point\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ point\ as\ absolute\ values.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ pointColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ points.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ point\ chart\ calculated\ by\ the\ given\ values.\r\n
comment22.params=maxValue\ absoluteValues\ width\ height\ backgroundColor\ pointColor
comment22.target=greenfoot.GreenfootImage\ createPointChart(double,\ java.awt.Point[],\ int,\ int,\ greenfoot.Color,\ greenfoot.Color)
comment22.text=\r\n\ Creates\ a\ point\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ point\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ point\ as\ absolute\ values.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @param\ pointColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ points.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ point\ chart\ calculated\ by\ the\ given\ values.\r\n
comment23.params=maxValue\ absoluteValues\ width\ height\ backgroundColor\ pointColor\ frameColor\ frameWidth
comment23.target=greenfoot.GreenfootImage\ createPointChart(double,\ java.awt.Point[],\ int,\ int,\ greenfoot.Color,\ greenfoot.Color,\ greenfoot.Color,\ int)
comment23.text=\r\n\ Creates\ a\ point\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ point\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ point\ as\ absolute\ values.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @param\ pointColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ points.\r\n\ \r\n\ @param\ frameColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ frame\ (if\ there\ is\ one).\r\n\ \r\n\ @param\ frameWidth\r\n\ \ \ \ \ \ The\ width\ of\ the\ frame\ (0\ \=\ no\ frame).\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ point\ chart\ calculated\ by\ the\ given\ values.\r\n
comment24.params=maxValue\ absoluteValues\ width\ height
comment24.target=greenfoot.GreenfootImage\ createSurfaceChart(double,\ java.awt.Point[],\ int,\ int)
comment24.text=\r\n\ Creates\ a\ surface\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ point\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ point\ as\ absolute\ values.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ surface\ chart\ calculated\ by\ the\ given\ values.\r\n
comment25.params=maxValue\ absoluteValues\ width\ height\ surfaceColor
comment25.target=greenfoot.GreenfootImage\ createSurfaceChart(double,\ java.awt.Point[],\ int,\ int,\ greenfoot.Color)
comment25.text=\r\n\ Creates\ a\ surface\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ point\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ point\ as\ absolute\ values.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ surfaceColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ surface.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ surface\ chart\ calculated\ by\ the\ given\ values.\r\n
comment26.params=maxValue\ absoluteValues\ width\ height\ backgroundColor\ surfaceColor
comment26.target=greenfoot.GreenfootImage\ createSurfaceChart(double,\ java.awt.Point[],\ int,\ int,\ greenfoot.Color,\ greenfoot.Color)
comment26.text=\r\n\ Creates\ a\ surface\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ point\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ point\ as\ absolute\ values.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @param\ surfaceColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ surface.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ surface\ chart\ calculated\ by\ the\ given\ values.\r\n
comment27.params=maxValue\ absoluteValues\ width\ height\ backgroundColor\ surfaceColor\ frameColor\ frameWidth
comment27.target=greenfoot.GreenfootImage\ createSurfaceChart(double,\ java.awt.Point[],\ int,\ int,\ greenfoot.Color,\ greenfoot.Color,\ greenfoot.Color,\ int)
comment27.text=\r\n\ Creates\ a\ surface\ chart\ with\ the\ given\ values\ for\ the\ max\ height,\ absolute\ values,\ ...\r\n\ \r\n\ @param\ maxValue\r\n\ \ \ \ \ \ The\ maximum\ value\ that\ the\ point\ chart\ can\ reach.\r\n\ \r\n\ @param\ absoluteValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ point\ as\ absolute\ values.\r\n\ \r\n\ @param\ width\r\n\ \ \ \ \ \ The\ width\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ width\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ height\r\n\ \ \ \ \ \ The\ height\ of\ the\ chart\ itselves.\ This\ value\ is\ not\ the\ height\ of\ the\ whole\ image.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @param\ surfaceColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ surface.\r\n\ \r\n\ @param\ frameColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ frame\ (if\ there\ is\ one).\r\n\ \r\n\ @param\ frameWidth\r\n\ \ \ \ \ \ The\ width\ of\ the\ frame\ (0\ \=\ no\ frame).\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ surface\ chart\ calculated\ by\ the\ given\ values.\r\n
comment28.params=value\ decimalPlaces
comment28.target=double\ round(double,\ int)
comment28.text=\r\n\ Round\ a\ double\ value\ to\ a\ variable\ number\ of\ decimal\ plases.\r\n\ \r\n\ @param\ value\r\n\ \ \ \ \ \ The\ double\ value\ that\ should\ be\ rounded.\r\n\ \r\n\ @param\ decimalPlaces\r\n\ \ \ \ \ \ The\ number\ of\ decimal\ places\ you\ want\ to\ round\ the\ double\ value\ to.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ The\ double\ value\ roundet\ to\ the\ given\ number\ of\ decimal\ places.\r\n
comment29.params=p1\ p2\ angle1\ angle2
comment29.target=double[]\ calculateCrossingPointByAngle(java.awt.Point,\ java.awt.Point,\ double,\ double)
comment29.text=\r\n\ Calculates\ the\ crossing\ point\ of\ two\ lines\ that\ are\ calculated\ by\ a\ point\ of\ each\ line\ and\ the\ angle\ of\ each\ line.\r\n\ \r\n\ @param\ p1\r\n\ \ \ \ \ \ Any\ point\ of\ the\ first\ line.\r\n\ \r\n\ @param\ p2\r\n\ \ \ \ \ \ Any\ point\ of\ the\ second\ line.\r\n\ \r\n\ @param\ angle1\r\n\ \ \ \ \ \ The\ angle\ of\ the\ first\ line\ in\ degrees\ (0\ \=>\ vertical\ line,\ 90\ \=>\ horizontal\ line).\r\n\ \r\n\ @param\ angle2\r\n\ \ \ \ \ \ The\ angle\ of\ the\ second\ line\ in\ degrees\ (0\ \=>\ vertical\ line,\ 90\ \=>\ horizontal\ line).\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ The\ coordinates\ of\ the\ crossing\ point\ of\ the\ two\ lines\ as\ a\ double\ array.\r\n
comment3.params=radius\ percentValues\ colors\ legend
comment3.target=greenfoot.GreenfootImage\ createPieChart(int,\ double[],\ greenfoot.Color[],\ java.lang.String[])
comment3.text=\r\n\ Create\ a\ pie\ chart\ with\ the\ given\ values\ for\ the\ radius,\ the\ percentValues,\ the\ colors...\r\n\ \r\n\ @param\ radius\r\n\ \ \ \ \ \ The\ radius\ of\ the\ pie\ chart\ that\ is\ created.\r\n\ \r\n\ @param\ percentValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ part\ of\ the\ pie\ chart\ as\ percent\ values.\r\n\ \r\n\ @param\ colors\r\n\ \ \ \ \ \ The\ colors\ for\ each\ part\ of\ the\ pie\ chart.\r\n\ \r\n\ @param\ legend\r\n\ \ \ \ \ \ The\ names\ of\ each\ field\ for\ the\ legend.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ pie\ chart\ calculated\ by\ the\ given\ values.\r\n
comment30.params=p1\ p2\ slope1\ slope2
comment30.target=double[]\ calculateCrossingPointBySlope(java.awt.Point,\ java.awt.Point,\ double,\ double)
comment30.text=\r\n\ Calculates\ the\ crossing\ point\ of\ two\ lines\ that\ are\ calculated\ by\ a\ point\ of\ each\ line\ and\ the\ slope\ of\ each\ line.\r\n\ \r\n\ @param\ p1\r\n\ \ \ \ \ \ Any\ point\ of\ the\ first\ line.\r\n\ \r\n\ @param\ p2\r\n\ \ \ \ \ \ Any\ point\ of\ the\ second\ line.\r\n\ \r\n\ @param\ angle1\r\n\ \ \ \ \ \ The\ slope\ of\ the\ first\ line.\r\n\ \r\n\ @param\ angle2\r\n\ \ \ \ \ \ The\ slope\ of\ the\ second\ line.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ The\ coordinates\ of\ the\ crossing\ point\ of\ the\ two\ lines\ as\ a\ double\ array.\r\n
comment4.params=radius\ percentValues\ colors\ legend\ backgroundColor
comment4.target=greenfoot.GreenfootImage\ createPieChart(int,\ double[],\ greenfoot.Color[],\ java.lang.String[],\ greenfoot.Color)
comment4.text=\r\n\ Create\ a\ pie\ chart\ with\ the\ given\ values\ for\ the\ radius,\ the\ percentValues,\ the\ colors...\r\n\ \r\n\ @param\ radius\r\n\ \ \ \ \ \ The\ radius\ of\ the\ pie\ chart\ that\ is\ created.\r\n\ \r\n\ @param\ percentValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ part\ of\ the\ pie\ chart\ as\ percent\ values.\r\n\ \r\n\ @param\ colors\r\n\ \ \ \ \ \ The\ colors\ for\ each\ part\ of\ the\ pie\ chart.\r\n\ \r\n\ @param\ legend\r\n\ \ \ \ \ \ The\ names\ of\ each\ field\ for\ the\ legend.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ pie\ chart\ calculated\ by\ the\ given\ values.\r\n
comment5.params=radius\ percentValues\ colors\ legend\ backgroundColor\ textColor
comment5.target=greenfoot.GreenfootImage\ createPieChart(int,\ double[],\ greenfoot.Color[],\ java.lang.String[],\ greenfoot.Color,\ greenfoot.Color)
comment5.text=\r\n\ Create\ a\ pie\ chart\ with\ the\ given\ values\ for\ the\ radius,\ the\ percentValues,\ the\ colors...\r\n\ \r\n\ @param\ radius\r\n\ \ \ \ \ \ The\ radius\ of\ the\ pie\ chart\ that\ is\ created.\r\n\ \r\n\ @param\ percentValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ part\ of\ the\ pie\ chart\ as\ percent\ values.\r\n\ \r\n\ @param\ colors\r\n\ \ \ \ \ \ The\ colors\ for\ each\ part\ of\ the\ pie\ chart.\r\n\ \r\n\ @param\ legend\r\n\ \ \ \ \ \ The\ names\ of\ each\ field\ for\ the\ legend.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @param\ textColor\r\n\ \ \ \ \ \ The\ text\ color\ of\ the\ legend.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ pie\ chart\ calculated\ by\ the\ given\ values.\r\n
comment6.params=radius\ percentValues\ colors\ legend\ displayValues\ backgroundColor
comment6.target=greenfoot.GreenfootImage\ createPieChart(int,\ double[],\ greenfoot.Color[],\ java.lang.String[],\ boolean,\ greenfoot.Color)
comment6.text=\r\n\ Create\ a\ pie\ chart\ with\ the\ given\ values\ for\ the\ radius,\ the\ percentValues,\ the\ colors...\r\n\ \r\n\ @param\ radius\r\n\ \ \ \ \ \ The\ radius\ of\ the\ pie\ chart\ that\ is\ created.\r\n\ \r\n\ @param\ percentValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ part\ of\ the\ pie\ chart\ as\ percent\ values.\r\n\ \r\n\ @param\ colors\r\n\ \ \ \ \ \ The\ colors\ for\ each\ part\ of\ the\ pie\ chart.\r\n\ \r\n\ @param\ legend\r\n\ \ \ \ \ \ The\ names\ of\ each\ field\ for\ the\ legend.\r\n\ \r\n\ @param\ displayValues\r\n\ \ \ \ \ \ You\ can\ choose\ whether\ the\ values\ should\ be\ displayed\ or\ not.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ pie\ chart\ calculated\ by\ the\ given\ values.\r\n
comment7.params=radius\ percentValues\ colors\ legend\ displayValues\ backgroundColor\ textColor
comment7.target=greenfoot.GreenfootImage\ createPieChart(int,\ double[],\ greenfoot.Color[],\ java.lang.String[],\ boolean,\ greenfoot.Color,\ greenfoot.Color)
comment7.text=\r\n\ Create\ a\ pie\ chart\ with\ the\ given\ values\ for\ the\ radius,\ the\ percentValues,\ the\ colors...\r\n\ \r\n\ @param\ radius\r\n\ \ \ \ \ \ The\ radius\ of\ the\ pie\ chart\ that\ is\ created.\r\n\ \r\n\ @param\ percentValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ part\ of\ the\ pie\ chart\ as\ percent\ values.\r\n\ \r\n\ @param\ colors\r\n\ \ \ \ \ \ The\ colors\ for\ each\ part\ of\ the\ pie\ chart.\r\n\ \r\n\ @param\ legend\r\n\ \ \ \ \ \ The\ names\ of\ each\ field\ for\ the\ legend.\r\n\ \r\n\ @param\ displayValues\r\n\ \ \ \ \ \ You\ can\ choose\ whether\ the\ values\ should\ be\ displayed\ or\ not.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @param\ textColor\r\n\ \ \ \ \ \ The\ text\ color\ of\ the\ legend.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ pie\ chart\ calculated\ by\ the\ given\ values.\r\n
comment8.params=radius\ percentValues\ colors\ legend\ displayValues\ backgroundColor\ textColor\ frameColor\ frameWidth
comment8.target=greenfoot.GreenfootImage\ createPieChart(int,\ double[],\ greenfoot.Color[],\ java.lang.String[],\ boolean,\ greenfoot.Color,\ greenfoot.Color,\ greenfoot.Color,\ int)
comment8.text=\r\n\ Create\ a\ pie\ chart\ with\ the\ given\ values\ for\ the\ radius,\ the\ percentValues,\ the\ colors...\r\n\ \r\n\ @param\ radius\r\n\ \ \ \ \ \ The\ radius\ of\ the\ pie\ chart\ that\ is\ created.\r\n\ \r\n\ @param\ percentValues\r\n\ \ \ \ \ \ The\ values\ for\ each\ part\ of\ the\ pie\ chart\ as\ percent\ values.\r\n\ \r\n\ @param\ colors\r\n\ \ \ \ \ \ The\ colors\ for\ each\ part\ of\ the\ pie\ chart.\r\n\ \r\n\ @param\ legend\r\n\ \ \ \ \ \ The\ names\ of\ each\ field\ for\ the\ chart.\r\n\ \r\n\ @param\ displayValues\r\n\ \ \ \ \ \ You\ can\ choose\ whether\ the\ values\ should\ be\ displayed\ or\ not.\r\n\ \r\n\ @param\ backgroundColor\r\n\ \ \ \ \ \ The\ background\ color\ of\ the\ whole\ chart.\r\n\ \r\n\ @param\ textColor\r\n\ \ \ \ \ \ The\ text\ color\ of\ the\ legend.\r\n\ \r\n\ @param\ frameColor\r\n\ \ \ \ \ \ The\ color\ of\ the\ frame\ (if\ there\ is\ one).\r\n\ \r\n\ @param\ frameWidth\r\n\ \ \ \ \ \ The\ width\ of\ the\ frame\ (0\ \=\ no\ frame).\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ GreenfootImage\ with\ a\ pie\ chart\ calculated\ by\ the\ given\ values.\r\n
comment9.params=currentX\ currentY\ angle\ distance
comment9.target=double[]\ move(double,\ double,\ double,\ double)
comment9.text=\r\n\ The\ position\ of\ an\ Actor\ that\ is\ moved\ the\ given\ distance\ into\ the\ given\ direction.\r\n\ \r\n\ @param\ currentX\r\n\ \ \ \ \ \ The\ current\ x\ coordinate\ of\ the\ actor.\r\n\ \r\n\ @param\ currentY\r\n\ \ \ \ \ \ The\ current\ y\ coordinate\ of\ the\ actor.\r\n\ \r\n\ @param\ angle\r\n\ \ \ \ \ \ The\ angle\ to\ which\ the\ actor\ should\ be\ moved.\r\n\ \r\n\ @param\ distance\r\n\ \ \ \ \ \ The\ distance\ the\ actor\ should\ be\ moved.\r\n\ \r\n\ @return\ \r\n\ \ \ \ \ \ Returns\ the\ new\ coordinates\ of\ the\ actor\ as\ a\ double\ array.\r\n
numComments=31
